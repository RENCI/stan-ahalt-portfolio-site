{"version":3,"sources":["webpack:///./src/components/List/List.js","webpack:///./src/components/List/ListItem.js","webpack:///./src/components/Typography/Typography.js","webpack:///./src/hooks/use-honors.js","webpack:///./src/hooks/use-service.js","webpack:///./src/hooks/use-presentations.js"],"names":["List","styled","ul","bullets","ListItem","li","Title","h2","props","center","right","propTypes","children","PropTypes","node","isRequired","h3","Heading","Subheading","h4","Paragraph","div","Footnote","span","useHonors","honors","edges","map","useService","service","usePresentations","presentations"],"mappings":"2ltEAEaA,EAAOC,IAAOC,GAAV,2DAAGD,EAAU,+CAAGE,QACC,OAAS,QADb,sDCAjBC,EAAWH,IAAOI,GAAV,2DAAGJ,CAAH,4B,iPCGRK,EAAQL,IAAOM,GAAV,oEAAGN,CAAH,wEAIX,SAAAO,GAAK,OAAIA,EAAMC,QAAU,yBACzB,SAAAD,GAAK,OAAIA,EAAME,OAAS,wBAG/BJ,EAAMK,UAAY,CACdC,SAAUC,IAAUC,KAAKC,YAKLd,IAAOe,GAAV,uEAAGf,CAAH,oDAGd,SAAAO,GAAK,OAAIA,EAAMC,QAAU,yBACzB,SAAAD,GAAK,OAAIA,EAAME,OAAS,wBAGtBC,UAAY,CACjBC,SAAUC,IAAUC,KAAKC,YAKtB,IAAME,EAAUhB,IAAOe,GAAV,sEAAGf,CAAH,gFAIb,SAAAO,GAAK,OAAIA,EAAMC,QAAU,yBACzB,SAAAD,GAAK,OAAIA,EAAME,OAAS,wBAG/BO,EAAQN,UAAY,CAChBC,SAAUC,IAAUC,KAAKC,YAKtB,IAAMG,EAAajB,IAAOkB,GAAV,yEAAGlB,CAAH,+DAGhB,SAAAO,GAAK,OAAIA,EAAMC,QAAU,yBACzB,SAAAD,GAAK,OAAIA,EAAME,OAAS,wBAG/BQ,EAAWP,UAAY,CACnBC,SAAUC,IAAUC,KAAKC,YAKtB,IAAMK,EAAYnB,IAAOoB,IAAV,wEAAGpB,CAAH,6BACf,SAAAO,GAAK,OAAIA,EAAMC,QAAU,yBAEzB,SAAAD,GAAK,OAAIA,EAAME,OAAS,wBAG/BU,EAAUT,UAAY,CAClBC,SAAUC,IAAUC,KAAKC,YAKtB,IAAMO,EAAWrB,IAAOsB,KAAV,uEAAGtB,CAAH,kIAWrBqB,EAASX,UAAY,CACjBC,SAAUC,IAAUC,KAAKC,a,uqbCrEhBS,EAAY,WAErB,OAF2B,OACnBC,OACMC,MAAMC,KAAI,qBAAGb,S,YCYlBc,EAAa,WAEtB,OAF4B,OACpBC,QACOH,MAAMC,KAAI,qBAAGb,QAAiB,I,kCClBpCgB,EAAmB,WAE5B,OAFkC,OAC1BC,cACaL,MAAMC,KAAI,qBAAGb,S","file":"b4ffd5ef0dc97e4fb70706762c486e9bd4c60ff5-15109340c82bd920e354.js","sourcesContent":["import styled from 'styled-components'\n\nexport const List = styled.ul(({ bullets }) => `\n    list-style-type: ${ bullets ? 'disc' : 'none' };\n    margin: 0 0 2rem 1rem;\n    padding: 0;\n`)\n","import styled from 'styled-components'\n\nexport const ListItem = styled.li`\n    margin-bottom: 0.5rem;\n`","import styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\n// \n\nexport const Title = styled.h2`\n    color: var(--color-dark);\n    font-weight: normal;\n    text-align: left;\n    ${ props => props.center && 'text-align: center;' }\n    ${ props => props.right && 'text-align: right;' }\n`\n\nTitle.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\n// \n\nexport const Subtitle = styled.h3`\n    color: var(--color-ash);\n    text-align: left;\n    ${ props => props.center && 'text-align: center;' }\n    ${ props => props.right && 'text-align: right;' }\n`\n\nSubtitle.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\n// \n\nexport const Heading = styled.h3`\n    color: var(--color-primary-dark);\n    text-align: left;\n    font-weight: normal;\n    ${ props => props.center && 'text-align: center;' }\n    ${ props => props.right && 'text-align: right;' }\n`\n\nHeading.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\n// \n\nexport const Subheading = styled.h4`\n    color: var(--color-primary-darker);\n    text-align: left;\n    ${ props => props.center && 'text-align: center;' }\n    ${ props => props.right && 'text-align: right;' }\n`\n\nSubheading.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\n// \n\nexport const Paragraph = styled.div`\n    ${ props => props.center && 'text-align: center;' }\n    text-align: left;\n    ${ props => props.right && 'text-align: right;' }\n`\n\nParagraph.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\n// \n\nexport const Footnote = styled.span`\n    display: inline-block;\n    color: var(--color-black);\n    margin-bottom: 1rem;\n    opacity: 0.25;\n    transition: opacity 250ms;\n    &:hover {\n        opacity: 1.0;\n    }\n`\n\nFootnote.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\n// \n","import { graphql, useStaticQuery } from 'gatsby'\n\nconst honorsQuery = graphql`{\n    honors: allHonorsJson {\n        edges {\n            node {\n                id\n                year\n                title\n            }\n        }\n    }\n}`\n\nexport const useHonors = () => {\n    const { honors } = useStaticQuery(honorsQuery)\n    return honors.edges.map(({ node }) => node)\n}\n","import { graphql, useStaticQuery } from 'gatsby'\n\nconst serviceQuery = graphql`{\n    service: allServiceJson {\n        edges {\n            node {\n                offices\n                service {\n                    boards\n                    committees {\n                        current\n                        past\n                    }\n                    chairing\n                    government {\n                        state\n                        nation\n                    }\n                    university {\n                        departmental\n                        universityWide\n                    }\n                }\n            }\n        }\n    }\n}`\n\nexport const useService = () => {\n    const { service } = useStaticQuery(serviceQuery)\n    return service.edges.map(({ node }) => node)[0]\n}\n","import { graphql, useStaticQuery } from 'gatsby'\n\nconst presentationsQuery = graphql`{\n    presentations: allPresentationsJson {\n        edges {\n            node {\n                citation\n            }\n        }\n    }\n}`\n\nexport const usePresentations = () => {\n    const { presentations } = useStaticQuery(presentationsQuery)\n    return presentations.edges.map(({ node }) => node)\n}\n"],"sourceRoot":""}